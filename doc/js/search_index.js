var search_data = {"index":{"searchIndex":["ansible","ansiblecallback","ansiblevalue","device","dimmer","knx","canonical_1bit","dpt1","dpt10","dpt10_frame","dpt11","dpt11_frame","dpt12","dpt12_frame","dpt13","dpt13_frame","dpt14","dpt14_float","dpt14_frame","dpt15","dpt15_frame","dpt16","dpt16_frame","dpt17","dpt17_frame","dpt18","dpt18_frame","dpt19","dpt19_frame","dpt1_frame","dpt2","dpt2_frame","dpt3","dpt3_frame","dpt4","dpt4_frame","dpt5","dpt5_frame","dpt6","dpt6_frame","dpt7","dpt7_frame","dpt8","dpt8_frame","dpt9","dpt9_float","dpt9_frame","dptframe","dimmer","eistype","knxvalue","knx_transceiver","normalexit","l_data_frame","scalarvalue","scene","tp_controlfield","switch","transceiver","zwave","dimmer","valueid","valuetype_bool","valuetype_button","valuetype_byte","valuetype_decimal","valuetype_int","valuetype_list","valuetype_short","valuetype_string","zwave_transceiver","dpt10","dpt9","dpt9_float","eibaddr","eibbuffer","eibconnection","eibint16","eibint32","eibint8","ozw_valueid_id","ozw_valueid_id1","object","openzwave","orbiterproxy","string","test","==()","==()","eibclose()","eibclose_sync()","eibcomplete()","eibgetapdu()","eibgetapdu_src()","eibgetapdu_src_async()","eibgetapdu_async()","eibgetbusmonitorpacket()","eibgetbusmonitorpacket_async()","eibgetgroup_src()","eibgetgroup_src_async()","eibgettpdu()","eibgettpdu_async()","eibopenbusmonitor()","eibopenbusmonitortext()","eibopenbusmonitortext_async()","eibopenbusmonitor_async()","eibopent_broadcast()","eibopent_broadcast_async()","eibopent_connection()","eibopent_connection_async()","eibopent_group()","eibopent_group_async()","eibopent_individual()","eibopent_individual_async()","eibopent_tpdu()","eibopent_tpdu_async()","eibopenvbusmonitor()","eibopenvbusmonitortext()","eibopenvbusmonitortext_async()","eibopenvbusmonitor_async()","eibopen_groupsocket()","eibopen_groupsocket_async()","eibreset()","eibreset_async()","eibsendapdu()","eibsendgroup()","eibsendtpdu()","eibsocketlocal()","eibsocketremote()","eibsocketurl()","eib_cache_clear()","eib_cache_clear_async()","eib_cache_disable()","eib_cache_disable_async()","eib_cache_enable()","eib_cache_enable_async()","eib_cache_lastupdates()","eib_cache_lastupdates_async()","eib_cache_read()","eib_cache_read_sync()","eib_cache_read_sync_async()","eib_cache_read_async()","eib_cache_remove()","eib_cache_remove_async()","eib_loadimage()","eib_loadimage_async()","eib_mc_authorize()","eib_mc_authorize_async()","eib_mc_connect()","eib_mc_connect_async()","eib_mc_getmaskversion()","eib_mc_getmaskversion_async()","eib_mc_getpeitype()","eib_mc_getpeitype_async()","eib_mc_individual_open()","eib_mc_individual_open_async()","eib_mc_progmode_off()","eib_mc_progmode_off_async()","eib_mc_progmode_on()","eib_mc_progmode_on_async()","eib_mc_progmode_status()","eib_mc_progmode_status_async()","eib_mc_progmode_toggle()","eib_mc_progmode_toggle_async()","eib_mc_propertydesc()","eib_mc_propertydesc_async()","eib_mc_propertyread()","eib_mc_propertyread_async()","eib_mc_propertyscan()","eib_mc_propertyscan_async()","eib_mc_propertywrite()","eib_mc_propertywrite_async()","eib_mc_read()","eib_mc_readadc()","eib_mc_readadc_async()","eib_mc_read_async()","eib_mc_restart()","eib_mc_restart_async()","eib_mc_setkey()","eib_mc_setkey_async()","eib_mc_write()","eib_mc_write_plain()","eib_mc_write_plain_async()","eib_mc_write_async()","eib_m_getmaskversion()","eib_m_getmaskversion_async()","eib_m_progmode_off()","eib_m_progmode_off_async()","eib_m_progmode_on()","eib_m_progmode_on_async()","eib_m_progmode_status()","eib_m_progmode_status_async()","eib_m_progmode_toggle()","eib_m_progmode_toggle_async()","eib_m_readindividualaddresses()","eib_m_readindividualaddresses_async()","eib_m_writeindividualaddress()","eib_m_writeindividualaddress_async()","eib_poll_complete()","eib_poll_fd()","[]()","__eibgetapdu_complete()","__eibgetapdu_src_complete()","__eibgetbusmonitorpacket_complete()","__eibgetgroup_src_complete()","__eibgettpdu_complete()","__eibopenbusmonitortext_complete()","__eibopenbusmonitor_complete()","__eibopent_broadcast_complete()","__eibopent_connection_complete()","__eibopent_group_complete()","__eibopent_individual_complete()","__eibopent_tpdu_complete()","__eibopenvbusmonitortext_complete()","__eibopenvbusmonitor_complete()","__eibopen_groupsocket_complete()","__eibreset_complete()","__eib_cache_clear_complete()","__eib_cache_disable_complete()","__eib_cache_enable_complete()","__eib_cache_lastupdates_complete()","__eib_cache_read_complete()","__eib_cache_read_sync_complete()","__eib_cache_remove_complete()","__eib_checkrequest()","__eib_getrequest()","__eib_loadimage_complete()","__eib_mc_authorize_complete()","__eib_mc_connect_complete()","__eib_mc_getmaskversion_complete()","__eib_mc_getpeitype_complete()","__eib_mc_individual_open_complete()","__eib_mc_progmode_off_complete()","__eib_mc_progmode_on_complete()","__eib_mc_progmode_status_complete()","__eib_mc_progmode_toggle_complete()","__eib_mc_propertydesc_complete()","__eib_mc_propertyread_complete()","__eib_mc_propertyscan_complete()","__eib_mc_propertywrite_complete()","__eib_mc_readadc_complete()","__eib_mc_read_complete()","__eib_mc_restart_complete()","__eib_mc_setkey_complete()","__eib_mc_write_complete()","__eib_mc_write_plain_complete()","__eib_m_getmaskversion_complete()","__eib_m_progmode_off_complete()","__eib_m_progmode_on_complete()","__eib_m_progmode_status_complete()","__eib_m_progmode_toggle_complete()","__eib_m_readindividualaddresses_complete()","__eib_m_writeindividualaddress_complete()","__eib_sendrequest()","abstractor=()","add_callback()","addr2str()","all()","as_canonical_value()","as_canonical_value()","as_canonical_value()","as_canonical_value()","as_canonical_value()","as_canonical_value()","as_canonical_value()","as_canonical_value()","as_canonical_value()","as_canonical_value()","as_canonical_value()","controller_state()","decode_framedata()","eibd_connection()","explain()","explain()","explain()","explain()","explain()","explain()","explain()","explain()","explain()","explain()","fire_callback()","frame_inspect()","from_scalar()","get()","get()","get()","get()","get_or_create()","getparam()","group_primary=()","groups=()","hexdump()","id_generator()","init_eibd()","init_stomp()","init_thrift()","insert()","link()","link()","link()","link()","manager()","manager_send()","matches?()","monitor_conn()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notification_allnodesqueried()","notification_awakenodesqueried()","notification_driverfailed()","notification_driverready()","notification_driverreset()","notification_essentialnodequeriescomplete()","notification_group()","notification_msgcomplete()","notification_nodeadded()","notification_nodeevent()","notification_nodenaming()","notification_nodenew()","notification_nodeprotocolinfo()","notification_nodequeriescomplete()","notification_noderemoved()","notification_pollingdisabled()","notification_pollingenabled()","notification_valueadded()","notification_valuechanged()","notification_valuerefreshed()","notification_valueremoved()","parse_ozw_headers()","read_eibd_cache()","read_only?()","read_only?()","read_operation()","read_operation()","read_operation()","read_operation()","read_operation()","read_operation()","read_operation()","read_operation()","read_value()","read_value()","recall()","remove_callback()","run()","run()","run()","send_apdu_raw()","send_conn()","set()","set()","set()","set()","stomp()","stop()","store()","str2addr()","to_apdu()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_protocol_value()","to_s()","to_s()","to_s()","to_scalar()","transceiver()","transceiver()","transceiver=()","transceiver=()","trigger_change_monitor()","update()","update_from_frame()","validate_ranges()","validate_ranges()","write_only?()","write_only?()","write_operation()","write_operation()","write_operation()","write_operation()","write_operation()","write_operation()","write_operation()","write_operation()","write_value()","write_value()","write_value()","readme","license","gpl","lgpl","monitrc-ansible"],"longSearchIndex":["ansible","ansible::ansiblecallback","ansible::ansiblevalue","ansible::device","ansible::dimmer","ansible::knx","ansible::knx::canonical_1bit","ansible::knx::dpt1","ansible::knx::dpt10","ansible::knx::dpt10::dpt10_frame","ansible::knx::dpt11","ansible::knx::dpt11::dpt11_frame","ansible::knx::dpt12","ansible::knx::dpt12::dpt12_frame","ansible::knx::dpt13","ansible::knx::dpt13::dpt13_frame","ansible::knx::dpt14","ansible::knx::dpt14::dpt14_float","ansible::knx::dpt14::dpt14_frame","ansible::knx::dpt15","ansible::knx::dpt15::dpt15_frame","ansible::knx::dpt16","ansible::knx::dpt16::dpt16_frame","ansible::knx::dpt17","ansible::knx::dpt17::dpt17_frame","ansible::knx::dpt18","ansible::knx::dpt18::dpt18_frame","ansible::knx::dpt19","ansible::knx::dpt19::dpt19_frame","ansible::knx::dpt1::dpt1_frame","ansible::knx::dpt2","ansible::knx::dpt2::dpt2_frame","ansible::knx::dpt3","ansible::knx::dpt3::dpt3_frame","ansible::knx::dpt4","ansible::knx::dpt4::dpt4_frame","ansible::knx::dpt5","ansible::knx::dpt5::dpt5_frame","ansible::knx::dpt6","ansible::knx::dpt6::dpt6_frame","ansible::knx::dpt7","ansible::knx::dpt7::dpt7_frame","ansible::knx::dpt8","ansible::knx::dpt8::dpt8_frame","ansible::knx::dpt9","ansible::knx::dpt9::dpt9_float","ansible::knx::dpt9::dpt9_frame","ansible::knx::dptframe","ansible::knx::dimmer","ansible::knx::eistype","ansible::knx::knxvalue","ansible::knx::knx_transceiver","ansible::knx::knx_transceiver::normalexit","ansible::knx::l_data_frame","ansible::knx::scalarvalue","ansible::knx::scene","ansible::knx::tp_controlfield","ansible::switch","ansible::transceiver","ansible::zwave","ansible::zwave::dimmer","ansible::zwave::valueid","ansible::zwave::valuetype_bool","ansible::zwave::valuetype_button","ansible::zwave::valuetype_byte","ansible::zwave::valuetype_decimal","ansible::zwave::valuetype_int","ansible::zwave::valuetype_list","ansible::zwave::valuetype_short","ansible::zwave::valuetype_string","ansible::zwave::zwave_transceiver","dpt10","dpt9","dpt9_float","eibaddr","eibbuffer","eibconnection","eibint16","eibint32","eibint8","ozw_valueid_id","ozw_valueid_id1","object","openzwave","orbiterproxy","string","test","ansible::knx::knxvalue#==()","ansible::zwave::valueid#==()","eibconnection#eibclose()","eibconnection#eibclose_sync()","eibconnection#eibcomplete()","eibconnection#eibgetapdu()","eibconnection#eibgetapdu_src()","eibconnection#eibgetapdu_src_async()","eibconnection#eibgetapdu_async()","eibconnection#eibgetbusmonitorpacket()","eibconnection#eibgetbusmonitorpacket_async()","eibconnection#eibgetgroup_src()","eibconnection#eibgetgroup_src_async()","eibconnection#eibgettpdu()","eibconnection#eibgettpdu_async()","eibconnection#eibopenbusmonitor()","eibconnection#eibopenbusmonitortext()","eibconnection#eibopenbusmonitortext_async()","eibconnection#eibopenbusmonitor_async()","eibconnection#eibopent_broadcast()","eibconnection#eibopent_broadcast_async()","eibconnection#eibopent_connection()","eibconnection#eibopent_connection_async()","eibconnection#eibopent_group()","eibconnection#eibopent_group_async()","eibconnection#eibopent_individual()","eibconnection#eibopent_individual_async()","eibconnection#eibopent_tpdu()","eibconnection#eibopent_tpdu_async()","eibconnection#eibopenvbusmonitor()","eibconnection#eibopenvbusmonitortext()","eibconnection#eibopenvbusmonitortext_async()","eibconnection#eibopenvbusmonitor_async()","eibconnection#eibopen_groupsocket()","eibconnection#eibopen_groupsocket_async()","eibconnection#eibreset()","eibconnection#eibreset_async()","eibconnection#eibsendapdu()","eibconnection#eibsendgroup()","eibconnection#eibsendtpdu()","eibconnection#eibsocketlocal()","eibconnection#eibsocketremote()","eibconnection#eibsocketurl()","eibconnection#eib_cache_clear()","eibconnection#eib_cache_clear_async()","eibconnection#eib_cache_disable()","eibconnection#eib_cache_disable_async()","eibconnection#eib_cache_enable()","eibconnection#eib_cache_enable_async()","eibconnection#eib_cache_lastupdates()","eibconnection#eib_cache_lastupdates_async()","eibconnection#eib_cache_read()","eibconnection#eib_cache_read_sync()","eibconnection#eib_cache_read_sync_async()","eibconnection#eib_cache_read_async()","eibconnection#eib_cache_remove()","eibconnection#eib_cache_remove_async()","eibconnection#eib_loadimage()","eibconnection#eib_loadimage_async()","eibconnection#eib_mc_authorize()","eibconnection#eib_mc_authorize_async()","eibconnection#eib_mc_connect()","eibconnection#eib_mc_connect_async()","eibconnection#eib_mc_getmaskversion()","eibconnection#eib_mc_getmaskversion_async()","eibconnection#eib_mc_getpeitype()","eibconnection#eib_mc_getpeitype_async()","eibconnection#eib_mc_individual_open()","eibconnection#eib_mc_individual_open_async()","eibconnection#eib_mc_progmode_off()","eibconnection#eib_mc_progmode_off_async()","eibconnection#eib_mc_progmode_on()","eibconnection#eib_mc_progmode_on_async()","eibconnection#eib_mc_progmode_status()","eibconnection#eib_mc_progmode_status_async()","eibconnection#eib_mc_progmode_toggle()","eibconnection#eib_mc_progmode_toggle_async()","eibconnection#eib_mc_propertydesc()","eibconnection#eib_mc_propertydesc_async()","eibconnection#eib_mc_propertyread()","eibconnection#eib_mc_propertyread_async()","eibconnection#eib_mc_propertyscan()","eibconnection#eib_mc_propertyscan_async()","eibconnection#eib_mc_propertywrite()","eibconnection#eib_mc_propertywrite_async()","eibconnection#eib_mc_read()","eibconnection#eib_mc_readadc()","eibconnection#eib_mc_readadc_async()","eibconnection#eib_mc_read_async()","eibconnection#eib_mc_restart()","eibconnection#eib_mc_restart_async()","eibconnection#eib_mc_setkey()","eibconnection#eib_mc_setkey_async()","eibconnection#eib_mc_write()","eibconnection#eib_mc_write_plain()","eibconnection#eib_mc_write_plain_async()","eibconnection#eib_mc_write_async()","eibconnection#eib_m_getmaskversion()","eibconnection#eib_m_getmaskversion_async()","eibconnection#eib_m_progmode_off()","eibconnection#eib_m_progmode_off_async()","eibconnection#eib_m_progmode_on()","eibconnection#eib_m_progmode_on_async()","eibconnection#eib_m_progmode_status()","eibconnection#eib_m_progmode_status_async()","eibconnection#eib_m_progmode_toggle()","eibconnection#eib_m_progmode_toggle_async()","eibconnection#eib_m_readindividualaddresses()","eibconnection#eib_m_readindividualaddresses_async()","eibconnection#eib_m_writeindividualaddress()","eibconnection#eib_m_writeindividualaddress_async()","eibconnection#eib_poll_complete()","eibconnection#eib_poll_fd()","ansible::ansiblevalue::[]()","eibconnection#__eibgetapdu_complete()","eibconnection#__eibgetapdu_src_complete()","eibconnection#__eibgetbusmonitorpacket_complete()","eibconnection#__eibgetgroup_src_complete()","eibconnection#__eibgettpdu_complete()","eibconnection#__eibopenbusmonitortext_complete()","eibconnection#__eibopenbusmonitor_complete()","eibconnection#__eibopent_broadcast_complete()","eibconnection#__eibopent_connection_complete()","eibconnection#__eibopent_group_complete()","eibconnection#__eibopent_individual_complete()","eibconnection#__eibopent_tpdu_complete()","eibconnection#__eibopenvbusmonitortext_complete()","eibconnection#__eibopenvbusmonitor_complete()","eibconnection#__eibopen_groupsocket_complete()","eibconnection#__eibreset_complete()","eibconnection#__eib_cache_clear_complete()","eibconnection#__eib_cache_disable_complete()","eibconnection#__eib_cache_enable_complete()","eibconnection#__eib_cache_lastupdates_complete()","eibconnection#__eib_cache_read_complete()","eibconnection#__eib_cache_read_sync_complete()","eibconnection#__eib_cache_remove_complete()","eibconnection#__eib_checkrequest()","eibconnection#__eib_getrequest()","eibconnection#__eib_loadimage_complete()","eibconnection#__eib_mc_authorize_complete()","eibconnection#__eib_mc_connect_complete()","eibconnection#__eib_mc_getmaskversion_complete()","eibconnection#__eib_mc_getpeitype_complete()","eibconnection#__eib_mc_individual_open_complete()","eibconnection#__eib_mc_progmode_off_complete()","eibconnection#__eib_mc_progmode_on_complete()","eibconnection#__eib_mc_progmode_status_complete()","eibconnection#__eib_mc_progmode_toggle_complete()","eibconnection#__eib_mc_propertydesc_complete()","eibconnection#__eib_mc_propertyread_complete()","eibconnection#__eib_mc_propertyscan_complete()","eibconnection#__eib_mc_propertywrite_complete()","eibconnection#__eib_mc_readadc_complete()","eibconnection#__eib_mc_read_complete()","eibconnection#__eib_mc_restart_complete()","eibconnection#__eib_mc_setkey_complete()","eibconnection#__eib_mc_write_complete()","eibconnection#__eib_mc_write_plain_complete()","eibconnection#__eib_m_getmaskversion_complete()","eibconnection#__eib_m_progmode_off_complete()","eibconnection#__eib_m_progmode_on_complete()","eibconnection#__eib_m_progmode_status_complete()","eibconnection#__eib_m_progmode_toggle_complete()","eibconnection#__eib_m_readindividualaddresses_complete()","eibconnection#__eib_m_writeindividualaddress_complete()","eibconnection#__eib_sendrequest()","ansible::knx::eistype#abstractor=()","ansible::ansiblecallback#add_callback()","object#addr2str()","ansible::knx::eistype::all()","ansible::ansiblevalue#as_canonical_value()","ansible::knx::canonical_1bit#as_canonical_value()","ansible::knx::dpt5#as_canonical_value()","ansible::zwave::valuetype_bool#as_canonical_value()","ansible::zwave::valuetype_button#as_canonical_value()","ansible::zwave::valuetype_byte#as_canonical_value()","ansible::zwave::valuetype_decimal#as_canonical_value()","ansible::zwave::valuetype_int#as_canonical_value()","ansible::zwave::valuetype_list#as_canonical_value()","ansible::zwave::valuetype_short#as_canonical_value()","ansible::zwave::valuetype_string#as_canonical_value()","ansible::zwave::zwave_transceiver#controller_state()","object#decode_framedata()","ansible::knx::knx_transceiver#eibd_connection()","ansible::knx::knxvalue#explain()","ansible::zwave::valueid#explain()","ansible::zwave::valuetype_bool#explain()","ansible::zwave::valuetype_button#explain()","ansible::zwave::valuetype_byte#explain()","ansible::zwave::valuetype_decimal#explain()","ansible::zwave::valuetype_int#explain()","ansible::zwave::valuetype_list#explain()","ansible::zwave::valuetype_short#explain()","ansible::zwave::valuetype_string#explain()","ansible::ansiblecallback#fire_callback()","object#frame_inspect()","ansible::knx::scalarvalue#from_scalar()","ansible::ansiblevalue#get()","ansible::knx::dpt14::dpt14_float#get()","ansible::knx::dpt9::dpt9_float#get()","dpt9_float#get()","ansible::zwave::valueid::get_or_create()","ansible::knx::knxvalue#getparam()","ansible::knx::knxvalue#group_primary=()","ansible::knx::knxvalue#groups=()","string#hexdump()","ansible::knx::knxvalue::id_generator()","ansible::knx::knx_transceiver#init_eibd()","ansible::zwave::zwave_transceiver#init_stomp()","ansible::zwave::zwave_transceiver#init_thrift()","ansible::ansiblevalue::insert()","ansible::dimmer#link()","ansible::knx::dimmer#link()","ansible::switch#link()","ansible::zwave::dimmer#link()","ansible::zwave::zwave_transceiver#manager()","ansible::zwave::zwave_transceiver#manager_send()","ansible::ansiblevalue#matches?()","ansible::knx::knx_transceiver#monitor_conn()","ansible::device::new()","ansible::knx::eistype::new()","ansible::knx::knxvalue::new()","ansible::knx::knx_transceiver::new()","ansible::transceiver::new()","ansible::zwave::valueid::new()","ansible::zwave::zwave_transceiver::new()","eibaddr::new()","eibbuffer::new()","eibconnection::new()","eibint16::new()","eibint32::new()","eibint8::new()","orbiterproxy::new()","test::new()","ansible::zwave::zwave_transceiver#notification_allnodesqueried()","ansible::zwave::zwave_transceiver#notification_awakenodesqueried()","ansible::zwave::zwave_transceiver#notification_driverfailed()","ansible::zwave::zwave_transceiver#notification_driverready()","ansible::zwave::zwave_transceiver#notification_driverreset()","ansible::zwave::zwave_transceiver#notification_essentialnodequeriescomplete()","ansible::zwave::zwave_transceiver#notification_group()","ansible::zwave::zwave_transceiver#notification_msgcomplete()","ansible::zwave::zwave_transceiver#notification_nodeadded()","ansible::zwave::zwave_transceiver#notification_nodeevent()","ansible::zwave::zwave_transceiver#notification_nodenaming()","ansible::zwave::zwave_transceiver#notification_nodenew()","ansible::zwave::zwave_transceiver#notification_nodeprotocolinfo()","ansible::zwave::zwave_transceiver#notification_nodequeriescomplete()","ansible::zwave::zwave_transceiver#notification_noderemoved()","ansible::zwave::zwave_transceiver#notification_pollingdisabled()","ansible::zwave::zwave_transceiver#notification_pollingenabled()","ansible::zwave::zwave_transceiver#notification_valueadded()","ansible::zwave::zwave_transceiver#notification_valuechanged()","ansible::zwave::zwave_transceiver#notification_valuerefreshed()","ansible::zwave::zwave_transceiver#notification_valueremoved()","openzwave::parse_ozw_headers()","ansible::knx::knx_transceiver#read_eibd_cache()","ansible::knx::knxvalue#read_only?()","ansible::zwave::valueid#read_only?()","ansible::zwave::valuetype_bool#read_operation()","ansible::zwave::valuetype_button#read_operation()","ansible::zwave::valuetype_byte#read_operation()","ansible::zwave::valuetype_decimal#read_operation()","ansible::zwave::valuetype_int#read_operation()","ansible::zwave::valuetype_list#read_operation()","ansible::zwave::valuetype_short#read_operation()","ansible::zwave::valuetype_string#read_operation()","ansible::knx::knxvalue#read_value()","ansible::zwave::valueid#read_value()","ansible::knx::scene#recall()","ansible::ansiblecallback#remove_callback()","ansible::knx::knx_transceiver#run()","ansible::transceiver#run()","ansible::zwave::zwave_transceiver#run()","ansible::knx::knx_transceiver#send_apdu_raw()","ansible::knx::knx_transceiver#send_conn()","ansible::ansiblevalue#set()","ansible::knx::dpt14::dpt14_float#set()","ansible::knx::dpt9::dpt9_float#set()","dpt9_float#set()","ansible::zwave::zwave_transceiver#stomp()","ansible::transceiver#stop()","ansible::knx::scene#store()","object#str2addr()","ansible::knx::knxvalue#to_apdu()","ansible::ansiblevalue#to_protocol_value()","ansible::knx::canonical_1bit#to_protocol_value()","ansible::knx::dpt5#to_protocol_value()","ansible::zwave::valuetype_bool#to_protocol_value()","ansible::zwave::valuetype_button#to_protocol_value()","ansible::zwave::valuetype_byte#to_protocol_value()","ansible::zwave::valuetype_decimal#to_protocol_value()","ansible::zwave::valuetype_int#to_protocol_value()","ansible::zwave::valuetype_list#to_protocol_value()","ansible::zwave::valuetype_short#to_protocol_value()","ansible::zwave::valuetype_string#to_protocol_value()","ansible::knx::eistype#to_s()","ansible::knx::knxvalue#to_s()","ansible::zwave::valueid#to_s()","ansible::knx::scalarvalue#to_scalar()","ansible::knx::knxvalue::transceiver()","ansible::zwave::valueid::transceiver()","ansible::knx::knxvalue::transceiver=()","ansible::zwave::valueid::transceiver=()","ansible::zwave::zwave_transceiver#trigger_change_monitor()","ansible::ansiblevalue#update()","ansible::knx::knxvalue#update_from_frame()","ansible::knx::dptframe#validate_ranges()","ansible::knx::knxvalue#validate_ranges()","ansible::knx::knxvalue#write_only?()","ansible::zwave::valueid#write_only?()","ansible::zwave::valuetype_bool#write_operation()","ansible::zwave::valuetype_button#write_operation()","ansible::zwave::valuetype_byte#write_operation()","ansible::zwave::valuetype_decimal#write_operation()","ansible::zwave::valuetype_int#write_operation()","ansible::zwave::valuetype_list#write_operation()","ansible::zwave::valuetype_short#write_operation()","ansible::zwave::valuetype_string#write_operation()","ansible::ansiblevalue#write_value()","ansible::knx::knxvalue#write_value()","ansible::zwave::valueid#write_value()","","","","",""],"info":[["Ansible","","Ansible.html","","<p>Project Ansible  - An extensible home automation scripting framework\n<p>Project Ansible  - An extensible …\n"],["Ansible::AnsibleCallback","","Ansible/AnsibleCallback.html","","<p>Callback module for project Ansible\n"],["Ansible::AnsibleValue","","Ansible/AnsibleValue.html","","<p>A base module for Ansible Values, which is the most basic form to declare a\nprotocol-agnostic control …\n"],["Ansible::Device","","Ansible/Device.html","","<p>root class describing an Ansible Device, i.e. a device controlled  at least\nby one automation protocol …\n"],["Ansible::Dimmer","","Ansible/Dimmer.html","","<p>a Dimmer is a Switch with additional capabilites (duh)\n"],["Ansible::KNX","","Ansible/KNX.html","","<p>KNX subsystem configuration\n"],["Ansible::KNX::Canonical_1bit","","Ansible/KNX/Canonical_1bit.html","","<p>1-bit canonical values for KNX implements value casting to/from the\ncanonical type, a boolean value  …\n"],["Ansible::KNX::DPT1","","Ansible/KNX/DPT1.html","","<p>DPT1: 1-bit (boolean) value\n"],["Ansible::KNX::DPT10","","Ansible/KNX/DPT10.html","","<p>DPT10.*: time\n"],["Ansible::KNX::DPT10::DPT10_Frame","","Ansible/KNX/DPT10/DPT10_Frame.html","","<p>DPTFrame to parse a DPT10 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT11","","Ansible/KNX/DPT11.html","","<p>DPT11.*: date\n"],["Ansible::KNX::DPT11::DPT11_Frame","","Ansible/KNX/DPT11/DPT11_Frame.html","",""],["Ansible::KNX::DPT12","","Ansible/KNX/DPT12.html","","<p>DPT12.*:  4-byte unsigned value\n"],["Ansible::KNX::DPT12::DPT12_Frame","","Ansible/KNX/DPT12/DPT12_Frame.html","",""],["Ansible::KNX::DPT13","","Ansible/KNX/DPT13.html","","<p>DPT13: 4-byte signed value\n"],["Ansible::KNX::DPT13::DPT13_Frame","","Ansible/KNX/DPT13/DPT13_Frame.html","",""],["Ansible::KNX::DPT14","","Ansible/KNX/DPT14.html","","<p>DPT14.*: 4-byte floating point value\n"],["Ansible::KNX::DPT14::DPT14_Float","","Ansible/KNX/DPT14/DPT14_Float.html","","<p>special Bindata::Primitive class required  for non-standard 32-bit floats\nused by DPT14\n"],["Ansible::KNX::DPT14::DPT14_Frame","","Ansible/KNX/DPT14/DPT14_Frame.html","","<p>Bitstruct to parse a DPT9 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT15","","Ansible/KNX/DPT15.html","","<p>DPT15.*: Access data\n"],["Ansible::KNX::DPT15::DPT15_Frame","","Ansible/KNX/DPT15/DPT15_Frame.html","","<p>Bitstruct to parse a DPT4 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT16","","Ansible/KNX/DPT16.html","","<p>DPT16: ASCII string\n"],["Ansible::KNX::DPT16::DPT16_Frame","","Ansible/KNX/DPT16/DPT16_Frame.html","","<p>Bitstruct to parse a DPT16 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT17","","Ansible/KNX/DPT17.html","","<p>DPT17: Scene number\n"],["Ansible::KNX::DPT17::DPT17_Frame","","Ansible/KNX/DPT17/DPT17_Frame.html","","<p>Bitstruct to parse a DPT17 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT18","","Ansible/KNX/DPT18.html","","<p>DPT18: 8-bit Scene Control\n"],["Ansible::KNX::DPT18::DPT18_Frame","","Ansible/KNX/DPT18/DPT18_Frame.html","",""],["Ansible::KNX::DPT19","","Ansible/KNX/DPT19.html","","<p>DPT19: 8-byte Date and Time\n"],["Ansible::KNX::DPT19::DPT19_Frame","","Ansible/KNX/DPT19/DPT19_Frame.html","",""],["Ansible::KNX::DPT1::DPT1_Frame","","Ansible/KNX/DPT1/DPT1_Frame.html","","<p>DPT1 frame description. Always 8-bit aligned.\n"],["Ansible::KNX::DPT2","","Ansible/KNX/DPT2.html","","<p>DPT2: 2-bit control value\n"],["Ansible::KNX::DPT2::DPT2_Frame","","Ansible/KNX/DPT2/DPT2_Frame.html","","<p>DPT2 frame description.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT3","","Ansible/KNX/DPT3.html","","<p>DPT3.*: 4-bit dimming/blinds control\n"],["Ansible::KNX::DPT3::DPT3_Frame","","Ansible/KNX/DPT3/DPT3_Frame.html","","<p>Bitstruct to parse a DPT3 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT4","","Ansible/KNX/DPT4.html","","<p>DPT4: 8-bit character\n"],["Ansible::KNX::DPT4::DPT4_Frame","","Ansible/KNX/DPT4/DPT4_Frame.html","","<p>Bitstruct to parse a DPT4 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT5","","Ansible/KNX/DPT5.html","","<p>DPT5: 8-bit unsigned value\n"],["Ansible::KNX::DPT5::DPT5_Frame","","Ansible/KNX/DPT5/DPT5_Frame.html","","<p>Bitstruct to parse a DPT5 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT6","","Ansible/KNX/DPT6.html","",""],["Ansible::KNX::DPT6::DPT6_Frame","","Ansible/KNX/DPT6/DPT6_Frame.html","","<p>Bitstruct to parse a DPT6 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT7","","Ansible/KNX/DPT7.html","",""],["Ansible::KNX::DPT7::DPT7_Frame","","Ansible/KNX/DPT7/DPT7_Frame.html","","<p>Bitstruct to parse a DPT7 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT8","","Ansible/KNX/DPT8.html","","<p>DPT8.*: 2-byte signed value\n"],["Ansible::KNX::DPT8::DPT8_Frame","","Ansible/KNX/DPT8/DPT8_Frame.html","","<p>Bitstruct to parse a DPT8 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPT9","","Ansible/KNX/DPT9.html","","<p>DPT9.*: 2-byte floating point value\n"],["Ansible::KNX::DPT9::DPT9_Float","","Ansible/KNX/DPT9/DPT9_Float.html","","<p>special Bindata::Primitive class required  for non-standard 16-bit floats\nused by DPT9\n"],["Ansible::KNX::DPT9::DPT9_Frame","","Ansible/KNX/DPT9/DPT9_Frame.html","","<p>DPTFrame to parse a DPT9 frame.  Always 8-bit aligned.\n"],["Ansible::KNX::DPTFrame","","Ansible/KNX/DPTFrame.html","","<p>a base class for DPT data structures. derives from BinData::Record,\nimplements some common stuff\n"],["Ansible::KNX::Dimmer","","Ansible/KNX/Dimmer.html","","<p>a KNX dimmer device\n"],["Ansible::KNX::EISType","","Ansible/KNX/EISType.html","","<p>the skeleton class for the datatypes in use by the KNX standard\n"],["Ansible::KNX::KNXValue","","Ansible/KNX/KNXValue.html","","<p>a KNXValue is a device-dependant datapoint. It is initialized by a\n<p>DPT type name (e.g. “1.001” …\n"],["Ansible::KNX::KNX_Transceiver","","Ansible/KNX/KNX_Transceiver.html","","<p>The KNX Transceiver is an object responsible for i/o with the KNX bus.  It\ndoes so using eibd, part of …\n"],["Ansible::KNX::KNX_Transceiver::NormalExit","","Ansible/KNX/KNX_Transceiver/NormalExit.html","","<p>a special exception to break the knx tranceiver loop\n"],["Ansible::KNX::L_DATA_Frame","","Ansible/KNX/L_DATA_Frame.html","","<p>same as TP_ControlField, plus network- and application-layer data  also\nknown as APDU (Application Datagram …\n"],["Ansible::KNX::ScalarValue","","Ansible/KNX/ScalarValue.html","","<p>KNX specification declares some special DPTs (5.001 and 5.003) that need\nscalar adjustment functions …\n"],["Ansible::KNX::Scene","","Ansible/KNX/Scene.html","","<p>KNX Scene control module\n"],["Ansible::KNX::TP_ControlField","","Ansible/KNX/TP_ControlField.html","","<p>the basic Control field structure for KNX/TP (Twisted Pair) telegrams\ncontains only low-level transmission …\n"],["Ansible::Switch","","Ansible/Switch.html","","<p>a Switch is a device controlled by a boolean state: False/Off/0 and\nTrue/On/1\n"],["Ansible::Transceiver","","Ansible/Transceiver.html","","<p>Generic Ansible tranceiver spawns a Ruby thread to call run()\n"],["Ansible::ZWave","","Ansible/ZWave.html","","<p>ZWave sybsustem configuration\n"],["Ansible::ZWave::Dimmer","","Ansible/ZWave/Dimmer.html","","<p>a ZWave dimmer device\n"],["Ansible::ZWave::ValueID","","Ansible/ZWave/ValueID.html","","<p>extend the Thrift ValueID interface with some interesting stuff\n"],["Ansible::ZWave::ValueType_Bool","","Ansible/ZWave/ValueType_Bool.html","","<p>boolean value type for OpenZWave\n"],["Ansible::ZWave::ValueType_Button","","Ansible/ZWave/ValueType_Button.html","","<p>button value type for OpenZWave\n"],["Ansible::ZWave::ValueType_Byte","","Ansible/ZWave/ValueType_Byte.html","","<p>byte value type for OpenZWave (0-255)\n"],["Ansible::ZWave::ValueType_Decimal","","Ansible/ZWave/ValueType_Decimal.html","","<p>Decimal value type for OpenZWave: special form for string representation \nof floating point values in …\n"],["Ansible::ZWave::ValueType_Int","","Ansible/ZWave/ValueType_Int.html","","<p>integer (32-bit) value type for OpenZWave\n"],["Ansible::ZWave::ValueType_List","","Ansible/ZWave/ValueType_List.html","","<p>list value type for OpenZWave\n"],["Ansible::ZWave::ValueType_Short","","Ansible/ZWave/ValueType_Short.html","","<p>short integer (16-bit) value type for OpenZWave\n"],["Ansible::ZWave::ValueType_String","","Ansible/ZWave/ValueType_String.html","","<p>string value type for OpenZWave\n"],["Ansible::ZWave::ZWave_Transceiver","","Ansible/ZWave/ZWave_Transceiver.html","","<p>the ZWave transceiver is responsible for communication with the ZWave\nnetwork  uses ozwd, a Thrift wrapper …\n"],["DPT10","","DPT10.html","",""],["DPT9","","DPT9.html","",""],["DPT9_Float","","DPT9_Float.html","",""],["EIBAddr","","EIBAddr.html","",""],["EIBBuffer","","EIBBuffer.html","",""],["EIBConnection","","EIBConnection.html","",""],["EIBInt16","","EIBInt16.html","",""],["EIBInt32","","EIBInt32.html","",""],["EIBInt8","","EIBInt8.html","",""],["OZW_ValueID_id","","OZW_ValueID_id.html","","<p>~ // ID Packing: ~ // Bits ~ // 24-31:    8 bits. Node ID of device ~ //\n22-23:    2 bits. genre of value …\n"],["OZW_ValueID_id1","","OZW_ValueID_id1.html","","<p>~ // ID1 Packing: ~ // Bits ~ // 24-31     8 bits. Instance Index of the\ncommand class.\n"],["Object","","Object.html","",""],["OpenZWave","","OpenZWave.html","","<p>Project Ansible  - An extensible home automation scripting framework\n\n<pre>md[1]      md[2]    md[3]        ...</pre>\n"],["OrbiterProxy","","OrbiterProxy.html","",""],["String","","String.html","","<p>\n<p>EXTENDING CLASS STRING\n<p>\n"],["Test","","Test.html","",""],["==","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-3D-3D","(other)","<p>equality checking\n"],["==","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-i-3D-3D","(other)","<p>equality checking\n"],["EIBClose","EIBConnection","EIBConnection.html#method-i-EIBClose","()",""],["EIBClose_sync","EIBConnection","EIBConnection.html#method-i-EIBClose_sync","()",""],["EIBComplete","EIBConnection","EIBConnection.html#method-i-EIBComplete","()",""],["EIBGetAPDU","EIBConnection","EIBConnection.html#method-i-EIBGetAPDU","(buf)",""],["EIBGetAPDU_Src","EIBConnection","EIBConnection.html#method-i-EIBGetAPDU_Src","(buf, src)",""],["EIBGetAPDU_Src_async","EIBConnection","EIBConnection.html#method-i-EIBGetAPDU_Src_async","(buf, src)",""],["EIBGetAPDU_async","EIBConnection","EIBConnection.html#method-i-EIBGetAPDU_async","(buf)",""],["EIBGetBusmonitorPacket","EIBConnection","EIBConnection.html#method-i-EIBGetBusmonitorPacket","(buf)",""],["EIBGetBusmonitorPacket_async","EIBConnection","EIBConnection.html#method-i-EIBGetBusmonitorPacket_async","(buf)",""],["EIBGetGroup_Src","EIBConnection","EIBConnection.html#method-i-EIBGetGroup_Src","(buf, src, dest)",""],["EIBGetGroup_Src_async","EIBConnection","EIBConnection.html#method-i-EIBGetGroup_Src_async","(buf, src, dest)",""],["EIBGetTPDU","EIBConnection","EIBConnection.html#method-i-EIBGetTPDU","(buf, src)",""],["EIBGetTPDU_async","EIBConnection","EIBConnection.html#method-i-EIBGetTPDU_async","(buf, src)",""],["EIBOpenBusmonitor","EIBConnection","EIBConnection.html#method-i-EIBOpenBusmonitor","()",""],["EIBOpenBusmonitorText","EIBConnection","EIBConnection.html#method-i-EIBOpenBusmonitorText","()",""],["EIBOpenBusmonitorText_async","EIBConnection","EIBConnection.html#method-i-EIBOpenBusmonitorText_async","()",""],["EIBOpenBusmonitor_async","EIBConnection","EIBConnection.html#method-i-EIBOpenBusmonitor_async","()",""],["EIBOpenT_Broadcast","EIBConnection","EIBConnection.html#method-i-EIBOpenT_Broadcast","(write_only)",""],["EIBOpenT_Broadcast_async","EIBConnection","EIBConnection.html#method-i-EIBOpenT_Broadcast_async","(write_only)",""],["EIBOpenT_Connection","EIBConnection","EIBConnection.html#method-i-EIBOpenT_Connection","(dest)",""],["EIBOpenT_Connection_async","EIBConnection","EIBConnection.html#method-i-EIBOpenT_Connection_async","(dest)",""],["EIBOpenT_Group","EIBConnection","EIBConnection.html#method-i-EIBOpenT_Group","(dest, write_only)",""],["EIBOpenT_Group_async","EIBConnection","EIBConnection.html#method-i-EIBOpenT_Group_async","(dest, write_only)",""],["EIBOpenT_Individual","EIBConnection","EIBConnection.html#method-i-EIBOpenT_Individual","(dest, write_only)",""],["EIBOpenT_Individual_async","EIBConnection","EIBConnection.html#method-i-EIBOpenT_Individual_async","(dest, write_only)",""],["EIBOpenT_TPDU","EIBConnection","EIBConnection.html#method-i-EIBOpenT_TPDU","(src)",""],["EIBOpenT_TPDU_async","EIBConnection","EIBConnection.html#method-i-EIBOpenT_TPDU_async","(src)",""],["EIBOpenVBusmonitor","EIBConnection","EIBConnection.html#method-i-EIBOpenVBusmonitor","()",""],["EIBOpenVBusmonitorText","EIBConnection","EIBConnection.html#method-i-EIBOpenVBusmonitorText","()",""],["EIBOpenVBusmonitorText_async","EIBConnection","EIBConnection.html#method-i-EIBOpenVBusmonitorText_async","()",""],["EIBOpenVBusmonitor_async","EIBConnection","EIBConnection.html#method-i-EIBOpenVBusmonitor_async","()",""],["EIBOpen_GroupSocket","EIBConnection","EIBConnection.html#method-i-EIBOpen_GroupSocket","(write_only)",""],["EIBOpen_GroupSocket_async","EIBConnection","EIBConnection.html#method-i-EIBOpen_GroupSocket_async","(write_only)",""],["EIBReset","EIBConnection","EIBConnection.html#method-i-EIBReset","()",""],["EIBReset_async","EIBConnection","EIBConnection.html#method-i-EIBReset_async","()",""],["EIBSendAPDU","EIBConnection","EIBConnection.html#method-i-EIBSendAPDU","(data)",""],["EIBSendGroup","EIBConnection","EIBConnection.html#method-i-EIBSendGroup","(dest, data)",""],["EIBSendTPDU","EIBConnection","EIBConnection.html#method-i-EIBSendTPDU","(dest, data)",""],["EIBSocketLocal","EIBConnection","EIBConnection.html#method-i-EIBSocketLocal","(path)",""],["EIBSocketRemote","EIBConnection","EIBConnection.html#method-i-EIBSocketRemote","(host, port = 6720)",""],["EIBSocketURL","EIBConnection","EIBConnection.html#method-i-EIBSocketURL","(url)",""],["EIB_Cache_Clear","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Clear","()",""],["EIB_Cache_Clear_async","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Clear_async","()",""],["EIB_Cache_Disable","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Disable","()",""],["EIB_Cache_Disable_async","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Disable_async","()",""],["EIB_Cache_Enable","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Enable","()",""],["EIB_Cache_Enable_async","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Enable_async","()",""],["EIB_Cache_LastUpdates","EIBConnection","EIBConnection.html#method-i-EIB_Cache_LastUpdates","(start, timeout, buf, ende)",""],["EIB_Cache_LastUpdates_async","EIBConnection","EIBConnection.html#method-i-EIB_Cache_LastUpdates_async","(start, timeout, buf, ende)",""],["EIB_Cache_Read","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Read","(dst, src, buf)",""],["EIB_Cache_Read_Sync","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Read_Sync","(dst, src, buf, age)",""],["EIB_Cache_Read_Sync_async","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Read_Sync_async","(dst, src, buf, age)",""],["EIB_Cache_Read_async","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Read_async","(dst, src, buf)",""],["EIB_Cache_Remove","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Remove","(dest)",""],["EIB_Cache_Remove_async","EIBConnection","EIBConnection.html#method-i-EIB_Cache_Remove_async","(dest)",""],["EIB_LoadImage","EIBConnection","EIBConnection.html#method-i-EIB_LoadImage","(image)",""],["EIB_LoadImage_async","EIBConnection","EIBConnection.html#method-i-EIB_LoadImage_async","(image)",""],["EIB_MC_Authorize","EIBConnection","EIBConnection.html#method-i-EIB_MC_Authorize","(key)",""],["EIB_MC_Authorize_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Authorize_async","(key)",""],["EIB_MC_Connect","EIBConnection","EIBConnection.html#method-i-EIB_MC_Connect","(dest)",""],["EIB_MC_Connect_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Connect_async","(dest)",""],["EIB_MC_GetMaskVersion","EIBConnection","EIBConnection.html#method-i-EIB_MC_GetMaskVersion","()",""],["EIB_MC_GetMaskVersion_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_GetMaskVersion_async","()",""],["EIB_MC_GetPEIType","EIBConnection","EIBConnection.html#method-i-EIB_MC_GetPEIType","()",""],["EIB_MC_GetPEIType_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_GetPEIType_async","()",""],["EIB_MC_Individual_Open","EIBConnection","EIBConnection.html#method-i-EIB_MC_Individual_Open","(dest)",""],["EIB_MC_Individual_Open_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Individual_Open_async","(dest)",""],["EIB_MC_Progmode_Off","EIBConnection","EIBConnection.html#method-i-EIB_MC_Progmode_Off","()",""],["EIB_MC_Progmode_Off_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Progmode_Off_async","()",""],["EIB_MC_Progmode_On","EIBConnection","EIBConnection.html#method-i-EIB_MC_Progmode_On","()",""],["EIB_MC_Progmode_On_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Progmode_On_async","()",""],["EIB_MC_Progmode_Status","EIBConnection","EIBConnection.html#method-i-EIB_MC_Progmode_Status","()",""],["EIB_MC_Progmode_Status_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Progmode_Status_async","()",""],["EIB_MC_Progmode_Toggle","EIBConnection","EIBConnection.html#method-i-EIB_MC_Progmode_Toggle","()",""],["EIB_MC_Progmode_Toggle_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Progmode_Toggle_async","()",""],["EIB_MC_PropertyDesc","EIBConnection","EIBConnection.html#method-i-EIB_MC_PropertyDesc","(obj, propertyno, proptype, max_nr_of_elem, access)",""],["EIB_MC_PropertyDesc_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_PropertyDesc_async","(obj, propertyno, proptype, max_nr_of_elem, access)",""],["EIB_MC_PropertyRead","EIBConnection","EIBConnection.html#method-i-EIB_MC_PropertyRead","(obj, propertyno, start, nr_of_elem, buf)",""],["EIB_MC_PropertyRead_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_PropertyRead_async","(obj, propertyno, start, nr_of_elem, buf)",""],["EIB_MC_PropertyScan","EIBConnection","EIBConnection.html#method-i-EIB_MC_PropertyScan","(buf)",""],["EIB_MC_PropertyScan_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_PropertyScan_async","(buf)",""],["EIB_MC_PropertyWrite","EIBConnection","EIBConnection.html#method-i-EIB_MC_PropertyWrite","(obj, propertyno, start, nr_of_elem, buf, res)",""],["EIB_MC_PropertyWrite_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_PropertyWrite_async","(obj, propertyno, start, nr_of_elem, buf, res)",""],["EIB_MC_Read","EIBConnection","EIBConnection.html#method-i-EIB_MC_Read","(addr, buf_len, buf)",""],["EIB_MC_ReadADC","EIBConnection","EIBConnection.html#method-i-EIB_MC_ReadADC","(channel, count, val)",""],["EIB_MC_ReadADC_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_ReadADC_async","(channel, count, val)",""],["EIB_MC_Read_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Read_async","(addr, buf_len, buf)",""],["EIB_MC_Restart","EIBConnection","EIBConnection.html#method-i-EIB_MC_Restart","()",""],["EIB_MC_Restart_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Restart_async","()",""],["EIB_MC_SetKey","EIBConnection","EIBConnection.html#method-i-EIB_MC_SetKey","(key, level)",""],["EIB_MC_SetKey_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_SetKey_async","(key, level)",""],["EIB_MC_Write","EIBConnection","EIBConnection.html#method-i-EIB_MC_Write","(addr, buf)",""],["EIB_MC_Write_Plain","EIBConnection","EIBConnection.html#method-i-EIB_MC_Write_Plain","(addr, buf)",""],["EIB_MC_Write_Plain_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Write_Plain_async","(addr, buf)",""],["EIB_MC_Write_async","EIBConnection","EIBConnection.html#method-i-EIB_MC_Write_async","(addr, buf)",""],["EIB_M_GetMaskVersion","EIBConnection","EIBConnection.html#method-i-EIB_M_GetMaskVersion","(dest)",""],["EIB_M_GetMaskVersion_async","EIBConnection","EIBConnection.html#method-i-EIB_M_GetMaskVersion_async","(dest)",""],["EIB_M_Progmode_Off","EIBConnection","EIBConnection.html#method-i-EIB_M_Progmode_Off","(dest)",""],["EIB_M_Progmode_Off_async","EIBConnection","EIBConnection.html#method-i-EIB_M_Progmode_Off_async","(dest)",""],["EIB_M_Progmode_On","EIBConnection","EIBConnection.html#method-i-EIB_M_Progmode_On","(dest)",""],["EIB_M_Progmode_On_async","EIBConnection","EIBConnection.html#method-i-EIB_M_Progmode_On_async","(dest)",""],["EIB_M_Progmode_Status","EIBConnection","EIBConnection.html#method-i-EIB_M_Progmode_Status","(dest)",""],["EIB_M_Progmode_Status_async","EIBConnection","EIBConnection.html#method-i-EIB_M_Progmode_Status_async","(dest)",""],["EIB_M_Progmode_Toggle","EIBConnection","EIBConnection.html#method-i-EIB_M_Progmode_Toggle","(dest)",""],["EIB_M_Progmode_Toggle_async","EIBConnection","EIBConnection.html#method-i-EIB_M_Progmode_Toggle_async","(dest)",""],["EIB_M_ReadIndividualAddresses","EIBConnection","EIBConnection.html#method-i-EIB_M_ReadIndividualAddresses","(buf)",""],["EIB_M_ReadIndividualAddresses_async","EIBConnection","EIBConnection.html#method-i-EIB_M_ReadIndividualAddresses_async","(buf)",""],["EIB_M_WriteIndividualAddress","EIBConnection","EIBConnection.html#method-i-EIB_M_WriteIndividualAddress","(dest)",""],["EIB_M_WriteIndividualAddress_async","EIBConnection","EIBConnection.html#method-i-EIB_M_WriteIndividualAddress_async","(dest)",""],["EIB_Poll_Complete","EIBConnection","EIBConnection.html#method-i-EIB_Poll_Complete","()",""],["EIB_Poll_FD","EIBConnection","EIBConnection.html#method-i-EIB_Poll_FD","()",""],["[]","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-c-5B-5D","(filter_hash)","<p>lookup an AnsibleValue by a filter hash returns an array of matching values\n"],["__EIBGetAPDU_Complete","EIBConnection","EIBConnection.html#method-i-__EIBGetAPDU_Complete","()",""],["__EIBGetAPDU_Src_Complete","EIBConnection","EIBConnection.html#method-i-__EIBGetAPDU_Src_Complete","()",""],["__EIBGetBusmonitorPacket_Complete","EIBConnection","EIBConnection.html#method-i-__EIBGetBusmonitorPacket_Complete","()",""],["__EIBGetGroup_Src_Complete","EIBConnection","EIBConnection.html#method-i-__EIBGetGroup_Src_Complete","()",""],["__EIBGetTPDU_Complete","EIBConnection","EIBConnection.html#method-i-__EIBGetTPDU_Complete","()",""],["__EIBOpenBusmonitorText_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenBusmonitorText_Complete","()",""],["__EIBOpenBusmonitor_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenBusmonitor_Complete","()",""],["__EIBOpenT_Broadcast_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenT_Broadcast_Complete","()",""],["__EIBOpenT_Connection_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenT_Connection_Complete","()",""],["__EIBOpenT_Group_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenT_Group_Complete","()",""],["__EIBOpenT_Individual_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenT_Individual_Complete","()",""],["__EIBOpenT_TPDU_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenT_TPDU_Complete","()",""],["__EIBOpenVBusmonitorText_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenVBusmonitorText_Complete","()",""],["__EIBOpenVBusmonitor_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpenVBusmonitor_Complete","()",""],["__EIBOpen_GroupSocket_Complete","EIBConnection","EIBConnection.html#method-i-__EIBOpen_GroupSocket_Complete","()",""],["__EIBReset_Complete","EIBConnection","EIBConnection.html#method-i-__EIBReset_Complete","()",""],["__EIB_Cache_Clear_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_Cache_Clear_Complete","()",""],["__EIB_Cache_Disable_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_Cache_Disable_Complete","()",""],["__EIB_Cache_Enable_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_Cache_Enable_Complete","()",""],["__EIB_Cache_LastUpdates_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_Cache_LastUpdates_Complete","()",""],["__EIB_Cache_Read_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_Cache_Read_Complete","()",""],["__EIB_Cache_Read_Sync_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_Cache_Read_Sync_Complete","()",""],["__EIB_Cache_Remove_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_Cache_Remove_Complete","()",""],["__EIB_CheckRequest","EIBConnection","EIBConnection.html#method-i-__EIB_CheckRequest","(block)",""],["__EIB_GetRequest","EIBConnection","EIBConnection.html#method-i-__EIB_GetRequest","()",""],["__EIB_LoadImage_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_LoadImage_Complete","()",""],["__EIB_MC_Authorize_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Authorize_Complete","()",""],["__EIB_MC_Connect_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Connect_Complete","()",""],["__EIB_MC_GetMaskVersion_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_GetMaskVersion_Complete","()",""],["__EIB_MC_GetPEIType_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_GetPEIType_Complete","()",""],["__EIB_MC_Individual_Open_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Individual_Open_Complete","()",""],["__EIB_MC_Progmode_Off_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Progmode_Off_Complete","()",""],["__EIB_MC_Progmode_On_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Progmode_On_Complete","()",""],["__EIB_MC_Progmode_Status_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Progmode_Status_Complete","()",""],["__EIB_MC_Progmode_Toggle_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Progmode_Toggle_Complete","()",""],["__EIB_MC_PropertyDesc_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_PropertyDesc_Complete","()",""],["__EIB_MC_PropertyRead_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_PropertyRead_Complete","()",""],["__EIB_MC_PropertyScan_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_PropertyScan_Complete","()",""],["__EIB_MC_PropertyWrite_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_PropertyWrite_Complete","()",""],["__EIB_MC_ReadADC_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_ReadADC_Complete","()",""],["__EIB_MC_Read_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Read_Complete","()",""],["__EIB_MC_Restart_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Restart_Complete","()",""],["__EIB_MC_SetKey_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_SetKey_Complete","()",""],["__EIB_MC_Write_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Write_Complete","()",""],["__EIB_MC_Write_Plain_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_MC_Write_Plain_Complete","()",""],["__EIB_M_GetMaskVersion_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_M_GetMaskVersion_Complete","()",""],["__EIB_M_Progmode_Off_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_M_Progmode_Off_Complete","()",""],["__EIB_M_Progmode_On_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_M_Progmode_On_Complete","()",""],["__EIB_M_Progmode_Status_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_M_Progmode_Status_Complete","()",""],["__EIB_M_Progmode_Toggle_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_M_Progmode_Toggle_Complete","()",""],["__EIB_M_ReadIndividualAddresses_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_M_ReadIndividualAddresses_Complete","()",""],["__EIB_M_WriteIndividualAddress_Complete","EIBConnection","EIBConnection.html#method-i-__EIB_M_WriteIndividualAddress_Complete","()",""],["__EIB_SendRequest","EIBConnection","EIBConnection.html#method-i-__EIB_SendRequest","(data)",""],["abstractor=","Ansible::KNX::EISType","Ansible/KNX/EISType.html#method-i-abstractor-3D","(&block)","<p>takes a KNX value and abstracts its data usage: eis1.abstractor {|value|\nvalue.to_s }\n"],["add_callback","Ansible::AnsibleCallback","Ansible/AnsibleCallback.html#method-i-add_callback","(event, target=nil, &cb_body)","<p>callback declaration mechanism.\n<p>Arguments:\n<p>event &mdash; a Symbol for the event (eg :onChange)  A special case …\n"],["addr2str","Object","Object.html#method-i-addr2str","(a, ga=false)","<p>addr2str: Convert an integer to an EIB address string, in the form\n“1/2/3” or “1.2.3” …\n"],["all","Ansible::KNX::EISType","Ansible/KNX/EISType.html#method-c-all","()","<p>method for getting all known EIS types as a flat array\n"],["as_canonical_value","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-i-as_canonical_value","()","<p>value convertion from protocol-specific to its canonical form must be\noverriden by protocol value subclass …\n"],["as_canonical_value","Ansible::KNX::Canonical_1bit","Ansible/KNX/Canonical_1bit.html#method-i-as_canonical_value","()","<p>data is 1 ==&gt; true, false otherwise\n"],["as_canonical_value","Ansible::KNX::DPT5","Ansible/KNX/DPT5.html#method-i-as_canonical_value","()","<p>DPT5 canonical values\n<p>use scalar conversion, if applicable  otherwise just return the data value\n"],["as_canonical_value","Ansible::ZWave::ValueType_Bool","Ansible/ZWave/ValueType_Bool.html#method-i-as_canonical_value","()",""],["as_canonical_value","Ansible::ZWave::ValueType_Button","Ansible/ZWave/ValueType_Button.html#method-i-as_canonical_value","()",""],["as_canonical_value","Ansible::ZWave::ValueType_Byte","Ansible/ZWave/ValueType_Byte.html#method-i-as_canonical_value","()","<p>ZWave 1-byte values canonical form is a Fixnum between 0 and 255\n"],["as_canonical_value","Ansible::ZWave::ValueType_Decimal","Ansible/ZWave/ValueType_Decimal.html#method-i-as_canonical_value","()",""],["as_canonical_value","Ansible::ZWave::ValueType_Int","Ansible/ZWave/ValueType_Int.html#method-i-as_canonical_value","()",""],["as_canonical_value","Ansible::ZWave::ValueType_List","Ansible/ZWave/ValueType_List.html#method-i-as_canonical_value","()",""],["as_canonical_value","Ansible::ZWave::ValueType_Short","Ansible/ZWave/ValueType_Short.html#method-i-as_canonical_value","()",""],["as_canonical_value","Ansible::ZWave::ValueType_String","Ansible/ZWave/ValueType_String.html#method-i-as_canonical_value","()",""],["controller_state","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-controller_state","(idx)","<p>handle controller state notifications\n"],["decode_framedata","Object","Object.html#method-i-decode_framedata","(data)",""],["eibd_connection","Ansible::KNX::KNX_Transceiver","Ansible/KNX/KNX_Transceiver.html#method-i-eibd_connection","(conn_symbol, conn_ok_symbol)","<p>get handle to eibd monitor connection\n"],["explain","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-explain","(frame)","<p>return a human-readable representation of a DPT frame\n"],["explain","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-i-explain","()","<p>fetch all available ValueID info from OpenZWave\n"],["explain","Ansible::ZWave::ValueType_Bool","Ansible/ZWave/ValueType_Bool.html#method-i-explain","()","<p>return a human-readable representation of a ZWave frame\n"],["explain","Ansible::ZWave::ValueType_Button","Ansible/ZWave/ValueType_Button.html#method-i-explain","()","<p>return a human-readable representation of a ZWave frame\n"],["explain","Ansible::ZWave::ValueType_Byte","Ansible/ZWave/ValueType_Byte.html#method-i-explain","()","<p>return a human-readable representation of a ZWave frame\n"],["explain","Ansible::ZWave::ValueType_Decimal","Ansible/ZWave/ValueType_Decimal.html#method-i-explain","()","<p>return a human-readable representation of a ZWave frame\n"],["explain","Ansible::ZWave::ValueType_Int","Ansible/ZWave/ValueType_Int.html#method-i-explain","()","<p>return a human-readable representation of a ZWave frame\n"],["explain","Ansible::ZWave::ValueType_List","Ansible/ZWave/ValueType_List.html#method-i-explain","()","<p>return a human-readable representation of a ZWave frame\n"],["explain","Ansible::ZWave::ValueType_Short","Ansible/ZWave/ValueType_Short.html#method-i-explain","()","<p>return a human-readable representation of a ZWave frame\n"],["explain","Ansible::ZWave::ValueType_String","Ansible/ZWave/ValueType_String.html#method-i-explain","()","<p>return a human-readable representation of a ZWave frame\n"],["fire_callback","Ansible::AnsibleCallback","Ansible/AnsibleCallback.html#method-i-fire_callback","(event, target=nil, *args)","<p>callback firing processor.\n<p>Checks if a proc is stored for a ginen event, then calls it with the object\n…\n"],["frame_inspect","Object","Object.html#method-i-frame_inspect","(frame)",""],["from_scalar","Ansible::KNX::ScalarValue","Ansible/KNX/ScalarValue.html#method-i-from_scalar","(val, data_range, scalar_range)","<p>convert value from its scalar representation e.g. in DPT5.001, 50(%) =&gt;\n0x7F , 100(%) =&gt; 0xFF  …\n"],["get","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-i-get","()","<p>get a value’s current state returns: the value, if found in eibd’s\ncache or nil otherwise\n"],["get","Ansible::KNX::DPT14::DPT14_Float","Ansible/KNX/DPT14/DPT14_Float.html#method-i-get","()",""],["get","Ansible::KNX::DPT9::DPT9_Float","Ansible/KNX/DPT9/DPT9_Float.html#method-i-get","()",""],["get","DPT9_Float","DPT9_Float.html#method-i-get","()",""],["get_or_create","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-c-get_or_create","(homeid_str, valueid_str)","<p>get existing ValueID object, or else create it\n"],["getparam","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-getparam","(param, field=nil)","<p>get a DPT parameter, trying to locate it in the following order:\n\n<pre>1) in the DPTFrame field definition  ...</pre>\n"],["group_primary=","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-group_primary-3D","(grpaddr)","<p>set primary group address\n"],["groups=","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-groups-3D","(other)","<p>assign a new array of group addresses for this datapoint\n"],["hexdump","String","String.html#method-i-hexdump","(sparse = false)","<p>prints out a good’ol hexdump of the data contained in the string\n<p>parameters:     sparse:   true / false …\n"],["id_generator","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-c-id_generator","()",""],["init_eibd","Ansible::KNX::KNX_Transceiver","Ansible/KNX/KNX_Transceiver.html#method-i-init_eibd","(conn_symbol, conn_ok_symbol)","<p>initialize eibd connection\n"],["init_stomp","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-init_stomp","()","<p>initialize connection to STOMP server\n"],["init_thrift","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-init_thrift","()","<p>initialize connection to THRIFT server\n"],["insert","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-c-insert","(newvalue)","<p>add an AnsibleValue to the singleton @@AllValues returns the newvalue, or\nthe existing value (using equality …\n"],["link","Ansible::Dimmer","Ansible/Dimmer.html#method-i-link","()",""],["link","Ansible::KNX::Dimmer","Ansible/KNX/Dimmer.html#method-i-link","()",""],["link","Ansible::Switch","Ansible/Switch.html#method-i-link","()",""],["link","Ansible::ZWave::Dimmer","Ansible/ZWave/Dimmer.html#method-i-link","()",""],["manager","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-manager","()","<p>get handle to OpenZWave::RemoteManager\n"],["manager_send","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-manager_send","(meth, *args)","<p>the preferred method to access OpenZWave::Manager methods is via this\ngeneric call function, which takes …\n"],["matches?","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-i-matches-3F","(hash)","<p>return true if a value’s instance variable (whose symbol is iv_symbol)\nmatches a filter value (as a regexp) …\n"],["monitor_conn","Ansible::KNX::KNX_Transceiver","Ansible/KNX/KNX_Transceiver.html#method-i-monitor_conn","()","<p>get handle to KNX monitoring connection, reconnecting if necessary\n"],["new","Ansible::Device","Ansible/Device.html#method-c-new","(hashmap)","<p>initialize an Ansible Device\n"],["new","Ansible::KNX::EISType","Ansible/KNX/EISType.html#method-c-new","(primary_type, secondary_type)","<p>initializes a new datatype\n"],["new","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-c-new","(dpt, groups=[], flags=nil)","<p>initialize a KNXValue\n<p>Arguments: \n<p>dpt &mdash; string representing the DPT (datapoint type) of the value e.g. “ …\n"],["new","Ansible::KNX::KNX_Transceiver","Ansible/KNX/KNX_Transceiver.html#method-c-new","(connURL=KNX_URL)","<p>initialize a KNXTranceiver\n<p>*params:\n\n<pre>[connURL] an eibd connection URL. see eibd --help for acceptable values</pre>\n"],["new","Ansible::Transceiver","Ansible/Transceiver.html#method-c-new","()",""],["new","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-c-new","( homeid_str, valueid_str)","<p>initialize ValueID by home and value id (both hex strings)\n"],["new","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-c-new","(stompURL, thriftURL)",""],["new","EIBAddr","EIBAddr.html#method-c-new","(value = 0)",""],["new","EIBBuffer","EIBBuffer.html#method-c-new","(buf = [])",""],["new","EIBConnection","EIBConnection.html#method-c-new","()",""],["new","EIBInt16","EIBInt16.html#method-c-new","(value = 0)",""],["new","EIBInt32","EIBInt32.html#method-c-new","(value = 0)",""],["new","EIBInt8","EIBInt8.html#method-c-new","(value = 0)",""],["new","OrbiterProxy","OrbiterProxy.html#method-c-new","()",""],["new","Test","Test.html#method-c-new","(h)",""],["notification_allNodesQueried","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_allNodesQueried","(nodeId, byte, value)",""],["notification_awakeNodesQueried","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_awakeNodesQueried","(nodeId, byte, value)","<p>All awake nodes have been queried, so client application can  expected\ncomplete data for these nodes. …\n"],["notification_driverFailed","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_driverFailed","(nodeId, byte, value)","<p>Driver failed to load */\n"],["notification_driverReady","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_driverReady","(nodeId, byte, value)","<p>A driver for a PC Z-Wave controller has been added and is ready  to use. \nThe notification will contain …\n"],["notification_driverReset","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_driverReset","(nodeId, byte, value)","<p>All nodes and values for this driver have been removed.\n<p>This is sent instead of potentially hundreds of …\n"],["notification_essentialNodeQueriesComplete","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_essentialNodeQueriesComplete","(nodeId, byte, value)","<p>The queries on a node that are essential to its operation have  been\ncompleted. The node can now handle …\n"],["notification_group","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_group","(nodeId, byte, value)","<p>The associations for the node have changed. The application  should rebuild\nany group information it …\n"],["notification_msgComplete","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_msgComplete","(nodeId, byte, value)","<p>The last message that was sent is now complete.\n"],["notification_nodeAdded","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_nodeAdded","(nodeId, byte, value)","<p>A new node has been added to OpenZWave’s list.  This may be due  to a\ndevice being added to the Z-Wave …\n"],["notification_nodeEvent","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_nodeEvent","(nodeId, byte, value)","<p>A node has triggered an event.  This is commonly caused when a node  sends\na Basic_Set command to the …\n"],["notification_nodeNaming","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_nodeNaming","(nodeId, byte, value)","<p>One of the node names has changed (name, manufacturer, product).\n"],["notification_nodeNew","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_nodeNew","(nodeId, byte, value)","<p>A new node has been found (not already stored in zwcfg*.xml file)\n"],["notification_nodeProtocolInfo","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_nodeProtocolInfo","(nodeId, byte, value)","<p>Basic node information has been receievd, such as whether  the node is a\nlistening device, a routing …\n"],["notification_nodeQueriesComplete","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_nodeQueriesComplete","(nodeId, byte, value)","<p>All the initialisation queries on a node have been completed.\n"],["notification_nodeRemoved","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_nodeRemoved","(nodeId, byte, value)","<p>A node has been removed from OpenZWave’s list.  This may be due  to a\ndevice being removed from the Z- …\n"],["notification_pollingDisabled","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_pollingDisabled","(nodeId, byte, value)","<p>Polling of a node has been successfully turned off by a call  to\nManager::DisablePoll\n"],["notification_pollingEnabled","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_pollingEnabled","(nodeId, byte, value)","<p>Polling of a node has been successfully turned on by a call  to\nManager::EnablePoll\n"],["notification_valueAdded","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_valueAdded","(nodeId, byte, value)","<p>a value has been added to the Z-Wave network\n"],["notification_valueChanged","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_valueChanged","(nodeId, byte, value)","<p>A node value has been updated from the Z-Wave network.\n"],["notification_valueRefreshed","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_valueRefreshed","(nodeId, byte, value)","<p>A node value has been refreshed from the Z-Wave network.\n"],["notification_valueRemoved","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-notification_valueRemoved","(nodeId, byte, value)","<p>a value has been removed from the Z-Wave network\n"],["parse_ozw_headers","OpenZWave","OpenZWave.html#method-c-parse_ozw_headers","(headerfile, enum_name)","<p>helper function to parse OpenZWave headers\n"],["read_eibd_cache","Ansible::KNX::KNX_Transceiver","Ansible/KNX/KNX_Transceiver.html#method-i-read_eibd_cache","(ga, cache_only=false)","<p>(Try to) read a groupaddr from eibd cache.\n<p>return it if found, otherwise query the bus. In the latter …\n"],["read_only?","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-read_only-3F","()","<p>is this KNX datapoint read only?\n"],["read_only?","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-i-read_only-3F","()","<p>is this ZWave value read only?\n"],["read_operation","Ansible::ZWave::ValueType_Bool","Ansible/ZWave/ValueType_Bool.html#method-i-read_operation","()","<p>define type-specific OZW::Manager API calls\n"],["read_operation","Ansible::ZWave::ValueType_Button","Ansible/ZWave/ValueType_Button.html#method-i-read_operation","()","<p>define type-specific OZW::Manager API calls\n"],["read_operation","Ansible::ZWave::ValueType_Byte","Ansible/ZWave/ValueType_Byte.html#method-i-read_operation","()","<p>define type-specific OZW::Manager API calls\n"],["read_operation","Ansible::ZWave::ValueType_Decimal","Ansible/ZWave/ValueType_Decimal.html#method-i-read_operation","()","<p>define type-specific OZW::Manager API calls\n"],["read_operation","Ansible::ZWave::ValueType_Int","Ansible/ZWave/ValueType_Int.html#method-i-read_operation","()","<p>define type-specific OZW::Manager API calls\n"],["read_operation","Ansible::ZWave::ValueType_List","Ansible/ZWave/ValueType_List.html#method-i-read_operation","()","<p>define type-specific OZW::Manager API calls\n"],["read_operation","Ansible::ZWave::ValueType_Short","Ansible/ZWave/ValueType_Short.html#method-i-read_operation","()","<p>define type-specific OZW::Manager API calls\n"],["read_operation","Ansible::ZWave::ValueType_String","Ansible/ZWave/ValueType_String.html#method-i-read_operation","()","<p>define type-specific OZW::Manager API calls\n"],["read_value","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-read_value","()","<p>read value from eibd’s group cache, or issue a read request, hoping that\nsomeone will respond with the …\n"],["read_value","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-i-read_value","()","<p>ZWave-specific: read value from the bus\n"],["recall","Ansible::KNX::Scene","Ansible/KNX/Scene.html#method-i-recall","(scene_id)",""],["remove_callback","Ansible::AnsibleCallback","Ansible/AnsibleCallback.html#method-i-remove_callback","(event, target=nil)","<p>remove a callback\n<p>Arguments:\n<p>event &mdash; a Symbol for the event (eg :onChange)  A special case is :default , …\n"],["run","Ansible::KNX::KNX_Transceiver","Ansible/KNX/KNX_Transceiver.html#method-i-run","()","<p>the main KNX transceiver thread\n"],["run","Ansible::Transceiver","Ansible/Transceiver.html#method-i-run","()",""],["run","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-run","()","<p>transceiver main loop, runs in its own Ruby thread\n"],["send_apdu_raw","Ansible::KNX::KNX_Transceiver","Ansible/KNX/KNX_Transceiver.html#method-i-send_apdu_raw","(dest, apdu)","<p>send a raw APDU to the KNX bus.\n<p>Arguments:\n<p>dest &mdash; destination (16-bit integer)\n"],["send_conn","Ansible::KNX::KNX_Transceiver","Ansible/KNX/KNX_Transceiver.html#method-i-send_conn","()","<p>get handle to KNX sending connection, reconnecting if necessary\n"],["set","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-i-set","(new_val)","\n<pre>set a value \nnew_val: the new value, must be ruby-castable to OpenZWave's type system\nreturns: true on ...</pre>\n"],["set","Ansible::KNX::DPT14::DPT14_Float","Ansible/KNX/DPT14/DPT14_Float.html#method-i-set","(v)","<p>DPT9_Range = -671088.64..670760.96\n"],["set","Ansible::KNX::DPT9::DPT9_Float","Ansible/KNX/DPT9/DPT9_Float.html#method-i-set","(v)",""],["set","DPT9_Float","DPT9_Float.html#method-i-set","(v)",""],["stomp","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-stomp","()","<p>get handle to stomp server, connect unless already connected caller must\nunlock @stompMutex when done …\n"],["stop","Ansible::Transceiver","Ansible/Transceiver.html#method-i-stop","()",""],["store","Ansible::KNX::Scene","Ansible/KNX/Scene.html#method-i-store","(scene_id)",""],["str2addr","Object","Object.html#method-i-str2addr","(s)","<p>str2addr: Parse an address string into an unsigned 16-bit integer\n"],["to_apdu","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-to_apdu","(frame, apci_code = 0x40)","<p>create apdu for this KNXValue APDU types are:\n\n<pre class=\"ruby\"><span class=\"ruby-value\">0x00</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">Read</span>\n<span class=\"ruby-value\">0x40</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">Response</span> (<span class=\"ruby-identifier\">default</span>)\n<span class=\"ruby-value\">0x80</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">Write</span>\n</pre>\n"],["to_protocol_value","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-i-to_protocol_value","(v)","<p>convert a canonical value back to its protocol-specific form must be\noverriden by protocol value subclass …\n"],["to_protocol_value","Ansible::KNX::Canonical_1bit","Ansible/KNX/Canonical_1bit.html#method-i-to_protocol_value","(v)","<p>v is true? 1 : 0\n"],["to_protocol_value","Ansible::KNX::DPT5","Ansible/KNX/DPT5.html#method-i-to_protocol_value","(v)",""],["to_protocol_value","Ansible::ZWave::ValueType_Bool","Ansible/ZWave/ValueType_Bool.html#method-i-to_protocol_value","(new_val)",""],["to_protocol_value","Ansible::ZWave::ValueType_Button","Ansible/ZWave/ValueType_Button.html#method-i-to_protocol_value","(new_val)",""],["to_protocol_value","Ansible::ZWave::ValueType_Byte","Ansible/ZWave/ValueType_Byte.html#method-i-to_protocol_value","(new_val)","<p>ZWave 1-byte values protocol form is a Fixnum between 0 and 255\n"],["to_protocol_value","Ansible::ZWave::ValueType_Decimal","Ansible/ZWave/ValueType_Decimal.html#method-i-to_protocol_value","(new_val)",""],["to_protocol_value","Ansible::ZWave::ValueType_Int","Ansible/ZWave/ValueType_Int.html#method-i-to_protocol_value","(new_val)",""],["to_protocol_value","Ansible::ZWave::ValueType_List","Ansible/ZWave/ValueType_List.html#method-i-to_protocol_value","(new_val)",""],["to_protocol_value","Ansible::ZWave::ValueType_Short","Ansible/ZWave/ValueType_Short.html#method-i-to_protocol_value","(new_val)",""],["to_protocol_value","Ansible::ZWave::ValueType_String","Ansible/ZWave/ValueType_String.html#method-i-to_protocol_value","(new_val)",""],["to_s","Ansible::KNX::EISType","Ansible/KNX/EISType.html#method-i-to_s","()","<p>return a human-readable description for this EISType\n"],["to_s","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-to_s","()","<p>human-readable representation of the value. Uses all field info from its\nDPT included module, if available. …\n"],["to_s","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-i-to_s","()","<p>return a reasonable string representation of the ZWave value\n"],["to_scalar","Ansible::KNX::ScalarValue","Ansible/KNX/ScalarValue.html#method-i-to_scalar","(val, data_range, scalar_range)","<p>convert value to its scalar representation e.g. in DPT5.001, 0x7F =&gt;\n50(%), 0xFF =&gt; 100(%)\n"],["transceiver","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-c-transceiver","()",""],["transceiver","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-c-transceiver","()",""],["transceiver=","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-c-transceiver-3D","(other)",""],["transceiver=","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-c-transceiver-3D","(other)",""],["trigger_change_monitor","Ansible::ZWave::ZWave_Transceiver","Ansible/ZWave/ZWave_Transceiver.html#method-i-trigger_change_monitor","(nodeId)","<p>Zwave value notification system only informs us about  a  value being\nchanged (ie by manual operation …\n"],["update","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-i-update","(newval)","<p>update internal instance variable representing the current state of the\nvalue called by read_value() …\n"],["update_from_frame","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-update_from_frame","(rawframe)","<p>update internal state from raw KNX frame\n"],["validate_ranges","Ansible::KNX::DPTFrame","Ansible/KNX/DPTFrame.html#method-i-validate_ranges","()","<p>make sure all frame fields are valid (within min,max range)\n"],["validate_ranges","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-validate_ranges","()","<p>make sure all frame fields are valid (within min,max range) see\nAnsible::AnsibleValue.update\n"],["write_only?","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-write_only-3F","()","<p>is this KNX datapoint write only?\n"],["write_only?","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-i-write_only-3F","()","<p>is this ZWave value write only?\n"],["write_operation","Ansible::ZWave::ValueType_Bool","Ansible/ZWave/ValueType_Bool.html#method-i-write_operation","()",""],["write_operation","Ansible::ZWave::ValueType_Button","Ansible/ZWave/ValueType_Button.html#method-i-write_operation","()",""],["write_operation","Ansible::ZWave::ValueType_Byte","Ansible/ZWave/ValueType_Byte.html#method-i-write_operation","()",""],["write_operation","Ansible::ZWave::ValueType_Decimal","Ansible/ZWave/ValueType_Decimal.html#method-i-write_operation","()",""],["write_operation","Ansible::ZWave::ValueType_Int","Ansible/ZWave/ValueType_Int.html#method-i-write_operation","()",""],["write_operation","Ansible::ZWave::ValueType_List","Ansible/ZWave/ValueType_List.html#method-i-write_operation","()",""],["write_operation","Ansible::ZWave::ValueType_Short","Ansible/ZWave/ValueType_Short.html#method-i-write_operation","()",""],["write_operation","Ansible::ZWave::ValueType_String","Ansible/ZWave/ValueType_String.html#method-i-write_operation","()",""],["write_value","Ansible::AnsibleValue","Ansible/AnsibleValue.html#method-i-write_value","()","<p>write value to the protocol\n"],["write_value","Ansible::KNX::KNXValue","Ansible/KNX/KNXValue.html#method-i-write_value","(new_val)","<p>write value to the bus argument: new_val according to DPT\n\n<pre>if :basic, then new_val is plain data value ...</pre>\n"],["write_value","Ansible::ZWave::ValueID","Ansible/ZWave/ValueID.html#method-i-write_value","(new_val)","<p>ZWave-specific: write new value to OpenZWave new_val must be in protocol\nform return true if successful, …\n"],["README","","README.html","","<p>Project Ansible © 2011 Elias Karakoulakis\n&lt;elias.karakoulakis@gmail.com&gt;\n<p>A home automation scripting …\n"],["LICENSE","","license/LICENSE.html","","<p>Ansible - A home automation scripting framework for Ruby\n<p>Copyright © 2011 Elias Karakoulakis &lt;elias.karakoulakis@gmail …\n"],["gpl","","license/gpl_txt.html","","\n<pre>                   GNU GENERAL PUBLIC LICENSE\n                      Version 3, 29 June 2007\n\nCopyright ...</pre>\n"],["lgpl","","license/lgpl_txt.html","","\n<pre>                  GNU LESSER GENERAL PUBLIC LICENSE\n                      Version 3, 29 June 2007\n\nCopyright ...</pre>\n"],["monitrc-ansible","","monit/monitrc-ansible.html","","<p>###############################################################################\n<p>## Project Ansible &mdash; Monit …\n\n"]]}}